---
name: Release 🚀

# yamllint disable rule:truthy
on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: "Dry run the release"
        required: false
        default: "false"

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  package_waldiez_react:
    name: Package React 🌐 distribution 📦
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: "recursive"

      - name: Setup bun
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: |
          bun install

      - name: Build
        run: |
          bun run build

      - name: Make docs
        run: |
          bun run docs

      - name: Move artifacts to dist
        run: |
          rm -rf dist && mkdir -p dist/react
          mv out/archive/* dist/react
          mv docs/reference/react dist/react/docs

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: waldiez-react
          path: dist/react

  package_waldiez_python:
    runs-on: ubuntu-latest
    needs: package_waldiez_react
    name: Package Python 🐍 distribution 📦
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: "recursive"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: python -m pip install --break-system-packages build twine

      - name: Pin optional extras
        run: |
          python scripts/pin_extras.py

      - name: Build 🏗️
        run: |
          mkdir -p dist/python
          python -m build --sdist --wheel --outdir dist/python
          python -m twine check dist/python/*

      - name: Download the react docs artifact
        uses: actions/download-artifact@v4
        with:
          name: waldiez-react
          path: dist/react

      - name: Make docs
        run: |
          mv dist/react/docs docs/reference/react
          python -m pip install --upgrade pip
          pip install -r requirements/main.txt -r requirements/dev.txt -r requirements/test.txt -r requirements/docs.txt
          python scripts/docs.py
          mv site dist/python/docs

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: waldiez-python
          path: |
            dist/python

  release:
    runs-on: ubuntu-latest
    name: Release 🚀
    needs:
      - package_waldiez_react
      - package_waldiez_python
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup bun
        uses: oven-sh/setup-bun@v2

      - name: Download artifact from react package
        uses: actions/download-artifact@v4
        with:
          name: waldiez-react
          path: dist/react

      - name: Download artifact from python package
        uses: actions/download-artifact@v4
        with:
          name: waldiez-python
          path: dist/python

      - name: Move artifacts to dist/waldiez
        run: |
          rm -rf dist/waldiez && mkdir -p dist/waldiez
          tar -czf dist/waldiez/docs.tar.gz dist/python/docs
          rm -rf dist/react/docs
          rm -rf dist/python/docs
          mv dist/react/* dist/waldiez
          mv dist/python/* dist/waldiez

      - name: Sign with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: >-
            dist/waldiez/*.whl
            dist/waldiez/*.tar.gz
            dist/waldiez/*.tgz

      - name: Read changelog
        id: changelog
        run: |
          changelog=$(bun run changelog)
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$changelog" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Get Tag Name
        id: tag_name
        run: |
          tag_name="v$(jq -r .version package.json | xargs)"
          echo "tag_name<<EOF" >> $GITHUB_OUTPUT
          echo "$tag_name" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Check if Extras are Ready
        id: check_extras
        run: |
          echo "Checking if extras are ready for tag: ${{ steps.tag_name.outputs.tag_name }}"

          TAG="${{ steps.tag_name.outputs.tag_name }}"

          EXTRAS_REPOS=("waldiez/jupyter" "waldiez/vscode" "waldiez/runner" "waldiez/studio")

          all_ok=true
          for repo in "${EXTRAS_REPOS[@]}"; do
            url="https://api.github.com/repos/$repo/git/refs/tags/$TAG"
            if ! curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "$url" | grep -q "\"ref\""; then
              echo "::error::Missing tag $TAG in $repo"
              all_ok=false
            fi
          done

          if [ "$all_ok" = true ]; then
            echo "ready=true" >> $GITHUB_OUTPUT
          else
            echo "ready=false" >> $GITHUB_OUTPUT
          fi

      - name: Create a release
        if: >
          github.event.inputs.dry_run != 'true' &&
          steps.changelog.outputs.changelog != '' &&
          steps.tag_name.outputs.tag_name != '' &&
          steps.check_extras.outputs.ready == 'true'
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release create "${{ steps.tag_name.outputs.tag_name }}" \
            --title '${{ steps.tag_name.outputs.tag_name }}' \
            --notes '${{ steps.changelog.outputs.changelog }}'

      - name: Upload artifacts and signatures to GitHub Release
        if: >
          github.event.inputs.dry_run != 'true' &&
          steps.changelog.outputs.changelog != '' &&
          steps.tag_name.outputs.tag_name != '' &&
          steps.check_extras.outputs.ready == 'true'
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release upload "${{ steps.tag_name.outputs.tag_name }}" \
            dist/**/*.tar.gz \
            dist/**/*.tar.gz.sigstore.json \
            dist/**/*.whl \
            dist/**/*.whl.sigstore.json \
            dist/**/*.tgz \
            dist/**/*.tgz.sigstore.json \
            --clobber \
            --repo '${{ github.repository }}'

      - name: Store artifacts (Dry Run Mode)
        if: github.event.inputs.dry_run == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: waldiez
          path: dist

      - name: Print release info
        run: |
          echo "Release info:"
          echo "Tag name: ${{ steps.tag_name.outputs.tag_name }}"
          echo "Changelog: ${{ steps.changelog.outputs.changelog }}"
          echo "Artifacts:"
          ls -la dist/waldiez
