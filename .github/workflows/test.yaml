---
name: Test ðŸ§ª
# yamllint disable rule:truthy
on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened, ready_for_review]
  push:
    branches: [main]
  merge_group:
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v5.0.0
        with:
          submodules: "recursive"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6.0.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: install lcov
        if: matrix.python-version == '3.12' && matrix.os == 'ubuntu-latest'
        run: sudo apt update && sudo apt install -y lcov

      - name: Cache pip dependencies
        uses: actions/cache@v4.3.0
        with:
          path: |
            ~/.cache/pip
            ~/AppData/Local/pip/Cache
            ~/Library/Caches/pip
          key: pip-test-${{ runner.os }}-py${{ matrix.python-version }}-${{ hashFiles('requirements/*.txt') }}
          restore-keys: |
            pip-test-${{ runner.os }}-py${{ matrix.python-version }}-
            pip-test-${{ runner.os }}-

      - name: Install py dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/main.txt -r requirements/dev.txt -r requirements/test.txt

      - name: Setup bun
        uses: oven-sh/setup-bun@v2.0.2

      - name: Cache bun dependencies
        uses: actions/cache@v4.3.0
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: bun-test-${{ runner.os }}-${{ hashFiles('package.json', 'bun.lock') }}
          restore-keys: |
            bun-test-${{ runner.os }}-

      - name: Install ts dependencies
        run: bun install

      - name: Cache Playwright browsers
        uses: actions/cache@v4.3.0
        with:
          path: |
            ~/.cache/ms-playwright
            ~/Library/Caches/ms-playwright
            ~/AppData/Local/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('package.json') }}
          restore-keys: |
            playwright-${{ runner.os }}-

      - name: Prepare Playwright
        run: npx playwright install --with-deps chromium

      - name: Run tests
        run: |
          python scripts/test.py
          bun run test

      - name: Report to Coveralls
        # don't spam coveralls with multiple reports
        if: matrix.python-version == '3.12' && matrix.os == 'ubuntu-latest'
        uses: coverallsapp/github-action@v2.3.6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./coverage/lcov.info
          fail-on-error: false
